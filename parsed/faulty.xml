<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="C:\Git\CS454-Automated_patching_using_GP\resources\LeapYear.java"><import>import <name><name>java</name><operator>.</operator><name>time</name><operator>.</operator><name>Year</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Calendar</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Date</name></name>;</import>

<class><specifier>public</specifier> class <name>LeapYear</name>
<block>{
    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>void</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name><name>String</name><index>[]</index></name></type> <name>args</name></decl></parameter>)</parameter_list> <block>{

    }</block></function>
    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>int</name></type> <name>checkLeapYear</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>year</name></decl></parameter>)</parameter_list><block>{
        <decl_stmt><decl><type><name>int</name></type> <name>specificYear</name> <init>= <expr><name>year</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>daysInYear</name> <init>= <expr><call><name><name>Year</name><operator>.</operator><name>of</name></name><argument_list>( <argument><expr><name>specificYear</name></expr></argument> )</argument_list></call><operator>.</operator><call><name>length</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <return>return <expr><call><name>leapYear</name><argument_list>(<argument><expr><name>specificYear</name></expr></argument>, <argument><expr><name>daysInYear</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>int</name></type> <name>leapYear</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>yearToCheck</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>days</name></decl></parameter>)</parameter_list> <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>year</name> <init>= <expr><name>yearToCheck</name></expr></init></decl>;</decl_stmt>

        <while>while <condition>(<expr><name>days</name> <operator>&gt;</operator> <literal type="number">365</literal></expr>)</condition> <block>{
            <if>if <condition>(<expr><call><name><name>Year</name><operator>.</operator><name>isLeap</name></name><argument_list>(<argument><expr><name>year</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
                <if>if <condition>(<expr><name>days</name> <operator>&gt;</operator> <literal type="number">366</literal></expr>)</condition><then> <block>{ <comment type="line">// days &gt; 365</comment>
                    <expr_stmt><expr><name>days</name> <operator>-=</operator> <literal type="number">366</literal></expr>;</expr_stmt>
                    <expr_stmt><expr><name>year</name> <operator>+=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then> <else>else <block>{
                <decl_stmt><decl><type><name>int</name></type> <name>temp</name> <init>= <expr><name>days</name> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name>days</name> <operator>-=</operator> <name>temp</name></expr>;</expr_stmt>
                <expr_stmt><expr><name>year</name> <operator>+=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
            }</block></else></if>
        }</block></while>
        <return>return <expr><name>year</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>
