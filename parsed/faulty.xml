<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="C:\Eigene_Programme\Git-Data\Own_Repositories\AISE-IntelliJ\resources\Smallest19.java"><comment type="line">//LC:1</comment>
<comment type="line">//LC:2</comment>
<comment type="block">/*//LC:3
 * Print out smallest integer from database//LC:4
 */</comment><comment type="line">//LC:5</comment>

<class><specifier>public</specifier> class <name>Smallest19</name> <block>{
    <decl_stmt><decl><specifier>public</specifier> <type><name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Scanner</name></name></type> <name>scanner</name></decl>;</decl_stmt>
    <decl_stmt><decl><specifier>public</specifier> <type><name>String</name></type> <name>output</name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>

    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>exec</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>b</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>d</name></decl></parameter>)</parameter_list> <block>{
        <decl_stmt><decl><type><name>String</name></type> <name>output</name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>output</name> <operator>+=</operator> <operator>(</operator><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"Please enter 4 numbers separated by spaces &gt; "</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>;</expr_stmt>
        <if>if <condition>(<expr><name>a</name> <operator>&lt;</operator> <name>b</name> <operator>&amp;&amp;</operator> <name>a</name> <operator>&lt;</operator> <name>c</name> <operator>&amp;&amp;</operator> <name>a</name> <operator>&lt;</operator> <name>d</name></expr>)</condition><then> <block>{
            <return>return <expr><name>output</name> <operator>+=</operator> <operator>(</operator><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"%d is the smallest\n"</literal></expr></argument>, <argument><expr><name>a</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
        }</block></then> <elseif>else <if>if <condition>(<expr><name>b</name> <operator>&lt;</operator> <name>a</name> <operator>&amp;&amp;</operator> <name>b</name> <operator>&lt;</operator> <name>c</name> <operator>&amp;&amp;</operator> <name>b</name> <operator>&lt;</operator> <name>d</name></expr>)</condition><then> <block>{
            <return>return <expr><name>output</name> <operator>+=</operator> <operator>(</operator><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"%d is the smallest\n"</literal></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
        }</block></then></if></elseif> <elseif>else <if>if <condition>(<expr><name>c</name> <operator>&lt;</operator> <name>a</name> <operator>&amp;&amp;</operator> <name>c</name> <operator>&lt;</operator> <name>b</name> <operator>&amp;&amp;</operator> <name>c</name> <operator>&lt;</operator> <name>d</name></expr>)</condition><then> <block>{
            <return>return <expr><name>output</name> <operator>+=</operator> <operator>(</operator><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"%d is the smallest\n"</literal></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
        }</block></then></if></elseif> <elseif>else <if>if <condition>(<expr><name>d</name> <operator>&lt;</operator> <name>a</name> <operator>&amp;&amp;</operator> <name>d</name> <operator>&lt;</operator> <name>c</name> <operator>&amp;&amp;</operator> <name>d</name> <operator>&lt;</operator> <name>b</name></expr>)</condition><then> <block>{
            <return>return <expr><name>output</name> <operator>+=</operator> <operator>(</operator><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"%d is the smallest\n"</literal></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
        }</block></then></if></elseif> <else>else <block>{
            <return>return <expr><name>output</name> <operator>+=</operator> <operator>(</operator><call><name><name>String</name><operator>.</operator><name>format</name></name><argument_list>(<argument><expr><literal type="string">"I don't know what I'm doing. \n"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
        }</block></else></if>
    }</block></function>
}</block></class>
</unit>
